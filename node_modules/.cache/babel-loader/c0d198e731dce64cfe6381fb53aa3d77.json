{"ast":null,"code":"import axios from\"axios\";import{USER_LOADED,USER_LOADING,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT_SUCCESS,REGISTER_SUCCESS,REGISTER_FAIL}from\"./types\";//Cheak Token and load user\nexport var loadUser=function loadUser(){return function(dispatch,getState){//User Loading\ndispatch({type:USER_LOADING});axios.get(\"https://store-our.herokuapp.com/api/auth/user\",tokenConfig(getState)).then(function(res){dispatch({type:USER_LOADED,payload:res.data});}).catch(function(err){dispatch({type:AUTH_ERROR});});};};export var login=function login(username,password){return function(dispatch){// Headers\nvar config={headers:{\"Content-Type\":\"application/json\"}};// Request Body\nvar body=JSON.stringify({username:username,password:password});console.log(body);axios.post(\"https://store-our.herokuapp.com/api/auth/login\",body,config).then(function(res){dispatch({type:LOGIN_SUCCESS,payload:res.data});}).catch(function(err){var errors={msg:err.response.data,status:err.response.status};dispatch({type:LOGIN_FAIL,payload:errors});});};};//REGISTER\nexport var profileRegister=function profileRegister(_ref){var username=_ref.username,email=_ref.email,password=_ref.password,post=_ref.post,firstName=_ref.firstName,lastName=_ref.lastName,phoneNo=_ref.phoneNo,address=_ref.address,country=_ref.country,state=_ref.state,policeStationRange=_ref.policeStationRange,district=_ref.district,workState=_ref.workState,workPoliceStationRange=_ref.workPoliceStationRange,workDistrict=_ref.workDistrict;return function(dispatch,getState){// Request Body\nvar body=JSON.stringify({username:username,email:email,password:password,post:post,firstName:firstName,lastName:lastName,phoneNo:phoneNo,address:address,country:country,state:state,policeStationRange:policeStationRange,district:district,workState:workState,workPoliceStationRange:workPoliceStationRange,workDistrict:workDistrict});console.log(body);axios.post(\"https://store-our.herokuapp.com/api/auth/profileRegister\",body,tokenConfig(getState)).then(function(res){console.log(res);dispatch({type:REGISTER_SUCCESS});}).catch(function(err){var errors={msg:err.response.data,status:err.response.status};dispatch({type:REGISTER_FAIL,payload:errors});});};};//LOGOUT\nexport var logout=function logout(){return function(dispatch,getState){axios.post(\"https://store-our.herokuapp.com/api/auth/logout\",null,tokenConfig(getState)).then(function(res){dispatch({type:LOGOUT_SUCCESS,payload:res.data});}).catch(function(err){console.log(err);});};};export var tokenConfig=function tokenConfig(getState){//GET TOKEN FROM STATE\nvar token=getState().auth.token;//Headers\nvar config={headers:{\"Content-Type\":\"application/json\"}};//if token , add to header config\nif(token){config.headers[\"Authorization\"]=\"Token \".concat(token);}return config;};","map":{"version":3,"sources":["/Users/puneet/Documents/projects/storeApp/frontend/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","catch","err","login","username","password","config","headers","body","JSON","stringify","console","log","post","errors","msg","response","status","profileRegister","email","firstName","lastName","phoneNo","address","country","state","policeStationRange","district","workState","workPoliceStationRange","workDistrict","logout","token","auth"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL\r\n} from \"./types\";\r\n\r\n//Cheak Token and load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //User Loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(\"https://store-our.herokuapp.com/api/auth/user\", tokenConfig(getState))\r\n    .then(res => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\nexport const login = (username, password) => dispatch => {\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  // Request Body\r\n  const body = JSON.stringify({ username, password });\r\n  console.log(body);\r\n\r\n  axios\r\n    .post(\"https://store-our.herokuapp.com/api/auth/login\", body, config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status\r\n      };\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n        payload: errors\r\n      });\r\n    });\r\n};\r\n\r\n//REGISTER\r\nexport const profileRegister = ({\r\n  username,\r\n  email,\r\n  password,\r\n  post,\r\n  firstName,\r\n  lastName,\r\n  phoneNo,\r\n  address,\r\n  country,\r\n  state,\r\n  policeStationRange,\r\n  district,\r\n  workState,\r\n  workPoliceStationRange,\r\n  workDistrict\r\n}) => (dispatch, getState) => {\r\n  // Request Body\r\n  const body = JSON.stringify({\r\n    username,\r\n    email,\r\n    password,\r\n    post,\r\n    firstName,\r\n    lastName,\r\n    phoneNo,\r\n    address,\r\n    country,\r\n    state,\r\n    policeStationRange,\r\n    district,\r\n    workState,\r\n    workPoliceStationRange,\r\n    workDistrict\r\n  });\r\n  console.log(body);\r\n\r\n  axios\r\n    .post(\r\n      \"https://store-our.herokuapp.com/api/auth/profileRegister\",\r\n      body,\r\n      tokenConfig(getState)\r\n    )\r\n    .then(res => {\r\n      console.log(res);\r\n      dispatch({\r\n        type: REGISTER_SUCCESS\r\n      });\r\n    })\r\n    .catch(err => {\r\n      const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status\r\n      };\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n        payload: errors\r\n      });\r\n    });\r\n};\r\n\r\n//LOGOUT\r\nexport const logout = () => (dispatch, getState) => {\r\n  axios\r\n    .post(\"https://store-our.herokuapp.com/api/auth/logout\", null, tokenConfig(getState))\r\n    .then(res => {\r\n      dispatch({\r\n        type: LOGOUT_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const tokenConfig = getState => {\r\n  //GET TOKEN FROM STATE\r\n  const token = getState().auth.token;\r\n\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  //if token , add to header config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}