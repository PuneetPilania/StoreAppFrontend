{"ast":null,"code":"import _objectWithoutProperties from\"/Users/puneet/Documents/projects/storeApp/frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Route,Redirect}from\"react-router-dom\";import{connect}from\"react-redux\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,auth=_ref.auth,rest=_objectWithoutProperties(_ref,[\"component\",\"auth\"]);return React.createElement(Route,Object.assign({},rest,{render:function render(props){if(auth.isLoading){return undefined;}else if(!auth.isAuthenticated){return React.createElement(Redirect,{to:{pathname:\"/login\",state:props.location}});}else{return React.createElement(Component,props);}}}));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth};};export default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/puneet/Documents/projects/storeApp/frontend/src/component/common/PrivateRoutes.js"],"names":["React","Route","Redirect","connect","PrivateRoute","Component","component","auth","rest","props","isLoading","undefined","isAuthenticated","pathname","state","location","mapStateToProps"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,UAAcC,CAAAA,SAAd,MAAGC,SAAH,CAAyBC,IAAzB,MAAyBA,IAAzB,CAAkCC,IAAlC,2DACjB,qBAAC,KAAD,kBACQA,IADR,EAEI,MAAM,CAAE,gBAAAC,KAAK,CAAI,CACb,GAAIF,IAAI,CAACG,SAAT,CAAoB,CAChB,MAAOC,CAAAA,SAAP,CACH,CAFD,IAEO,IAAI,CAACJ,IAAI,CAACK,eAAV,CAA2B,CAC9B,MACI,qBAAC,QAAD,EACI,EAAE,CAAE,CACAC,QAAQ,CAAE,QADV,CAEAC,KAAK,CAAEL,KAAK,CAACM,QAFb,CADR,EADJ,CAQH,CATM,IASA,CACH,MAAO,qBAAC,SAAD,CAAeN,KAAf,CAAP,CACH,CACJ,CAjBL,GADiB,EAArB,CAsBA,GAAMO,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAF,KAAK,QAAK,CAC9BP,IAAI,CAAEO,KAAK,CAACP,IADkB,CAAL,EAA7B,CAIA,cAAeJ,CAAAA,OAAO,CAACa,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            if (auth.isLoading) {\n                return undefined;\n            } else if (!auth.isAuthenticated) {\n                return (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: props.location\n                        }}\n                    />\n                );\n            } else {\n                return <Component {...props} />;\n            }\n        }}\n    />\n);\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}